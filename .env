##################################
# API CONFIGURATION              #
##################################

# Set the host for receiving connections from the users for access launcher functions.
# Use 0.0.0.0 or leave empty for bind API on all IPs.
API_LISTEN_HOST=

# Set the port for receiving connections from the users for access launcher functions.
API_LISTEN_PORT=80

# Set the host for receiving connections from the GameGatewayServer/ManagerServer servers (Rusty Hearts Servers) for the auth/billing functions.
# Use 0.0.0.0 for bind API on all IPs (not recommended!).
API_LOCAL_LISTEN_HOST=127.0.0.1

# Allow determination of client IP address based on "X-Forwarded-For" header.
# This must be enabled if a reverse proxy is used. It is also necessary to specify the reverse
# proxy IP address in parameter API_TRUSTPROXY_HOSTS, otherwise data spoofing is possible.
API_TRUSTPROXY_ENABLE=false

# List of IP addresses or subnets that should be trusted as a reverse proxy.
# Multiple entries can be listed separated by commas.
# If left empty, headers will be accepted from any IP address (not recommended!).
API_TRUSTPROXY_HOSTS=

# Set the initial balance value of In-game Shop account on user registration.
API_SHOP_INITIAL_BALANCE=0

# Set the port for receiving connections for the Auth/Billing API (USA).
API_USA_PORT=8070

# Set the port for receiving connections for the Auth/Billing API (JPN).
API_JPN_PORT=8080

# Set the port for receiving connections from the proxy server (JPN).
API_PROXY_PORT=8090

# Determines whether the helmet middleware is enabled or disabled. If enabled https need to be used for the api.
# If set to true, the helmet middleware is included in the middleware stack, which adds various security-related HTTP headers to the application's responses to help prevent common web vulnerabilities.
# If set to false, the helmet middleware is not included in the middleware stack, and the application's responses will not have these extra headers.
API_ENABLE_HELMET=false

# Set the server timezone
TZ=UTC

##################################
# LOGGING CONFIGURATION          #
##################################

# Set log level (available levels: debug, info, warn, error).
LOG_LEVEL=debug

# Enable log IP addresses.
LOG_IP_ADDRESSES=false

LOG_AUTH_CONSOLE=true
LOG_BILLING_CONSOLE=true
LOG_ACCOUNT_CONSOLE=true
LOG_MAILER_CONSOLE=true

###########################################
# API DATABASE CONFIGURATION (SQL Server) #
###########################################

# Set a host to connect to the SQL server database.
DB_SERVER=127.0.0.1

# Set the name of database
DB_DATABASE=RustyHearts_Account

# Set the user to connect to database
DB_USER=sa

# Set the password to connect to database
DB_PASSWORD=@RustyHearts

# Set to encrypt the connection to the database
DB_ENCRYPT=false

#########################
# GATEWAY CONFIGURATION #
#########################

# Set the host for receiving connections to the GameGatewayServer
GATESERVER_IP=192.168.100.3

# Set the port for receiving connections to the GameGatewayServer
GATESERVER_PORT=50001

# Set the server/world id used in the database
SERVER_ID=10101

##################################
# SMTP CONFIGURATION             #
##################################

# using gmail smtp server
# To generate app passwords, first you have to enable 2-Step Verification on your Google account.
# Go to your Google account security settings (https://myaccount.google.com/security) and enable 2-Step Verification
# Now, you can select the App passwords option to set up a new app password. https://myaccount.google.com/u/2/apppasswords

# The hostname or IP address of the SMTP server
SMTP_HOST=smtp.gmail.com

# The port number of the SMTP server
SMTP_PORT=465

# The encryption protocol to use (e.g. ssl, tls)
SMTP_ENCRYPTION=ssl

# The username of the SMTP server
SMTP_USERNAME=noreply@example.com

# The password/app password of the SMTP server
SMTP_PASSWORD=

# Outgoing mail sender email address.
SMTP_EMAIL_FROM_ADDRESS=noreply@example.com

# Outgoing mail sender name.
SMTP_FROM_NAME=Rusty Hearts
